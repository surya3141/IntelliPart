"""
Test script to demonstrate the fast analytics performance
"""

import time
from advanced_analytics import AdvancedAnalytics

def test_performance():
    print("ðŸš€ Testing IntelliPart Fast Analytics Performance")
    print("=" * 55)
    
    # Initialize analytics
    start_time = time.time()
    analytics = AdvancedAnalytics("data/training Dataset.jsonl")
    init_time = time.time() - start_time
    print(f"âš¡ Initialization: {init_time:.3f}s")
    
    # Test quick metrics
    start_time = time.time()
    metrics = analytics.get_quick_metrics()
    metrics_time = time.time() - start_time
    print(f"âš¡ Quick Metrics: {metrics_time:.4f}s")
    print(f"   ðŸ“Š {metrics['total_parts']} parts, {metrics['total_systems']} systems")
    
    # Test top systems
    start_time = time.time()
    top_systems = analytics.get_top_systems(5)
    systems_time = time.time() - start_time
    print(f"âš¡ Top Systems: {systems_time:.4f}s")
    print(f"   ðŸ“Š Top system: {top_systems[0]['system']} ({top_systems[0]['part_count']} parts)")
    
    # Test cost summary
    start_time = time.time()
    cost_summary = analytics.get_cost_summary()
    cost_time = time.time() - start_time
    print(f"âš¡ Cost Summary: {cost_time:.4f}s")
    print(f"   ðŸ’° Avg cost: â‚¹{cost_summary['avg_cost']}, Range: â‚¹{cost_summary['cost_range']}")
    
    # Test full analytics (first time)
    start_time = time.time()
    demand = analytics.predictive_demand_analysis()
    demand_time = time.time() - start_time
    print(f"âš¡ Demand Analysis: {demand_time:.4f}s")
    
    # Test full analytics (cached)
    start_time = time.time()
    demand_cached = analytics.predictive_demand_analysis()
    demand_cached_time = time.time() - start_time
    print(f"âš¡ Demand Analysis (cached): {demand_cached_time:.6f}s")
    
    # Test comprehensive report
    start_time = time.time()
    report = analytics.generate_comprehensive_report()
    report_time = time.time() - start_time
    print(f"âš¡ Comprehensive Report: {report_time:.4f}s")
    
    print(f"\nðŸ§  Cache Status: {len(analytics._cache)} items cached")
    print("\nðŸŽ¯ Performance Test Complete!")
    print("\nðŸ“ˆ Summary:")
    print(f"   â€¢ Quick Metrics: {metrics_time*1000:.1f}ms")
    print(f"   â€¢ Analytics (first): {demand_time*1000:.1f}ms")
    print(f"   â€¢ Analytics (cached): {demand_cached_time*1000:.3f}ms")
    print(f"   â€¢ Full Report: {report_time*1000:.1f}ms")

if __name__ == "__main__":
    test_performance()
